class Node:
    def __init__(self,data,next=None):
        self.data=data
        self.next=next
def reverse_ll(head):
    if head is None or head.next is None:
        return head
    new_head=reverse_ll(head.next)
    front=head.next
    front.next=head
    head.next=None
    return new_head
def is_palindrome(head):
    if head is None or head.next is None:
        return True
    slow=head
    fast=head
    while fast is not None and fast.next is not None:
        slow=slow.next
        fast=fast.next.next
        new_head=reverse_ll(slow.next)
        left=head
        right=new_head
        while right is not None:
            if left.data!=right.data:
                reverse_ll(new_head)
                return False
            right=right.next
            left=left.next
    reverse_ll(new_head)
    return True
    
head = Node(1)
head.next = Node(5)
head.next.next = Node(2)
head.next.next.next = Node(5)
head.next.next.next.next = Node(1)

print(is_palindrome(head))