class Node:
    def __init__(self,data,next=None):
        self.data=data
        self.next=next
def reverse_LinkedList(head):
    if head is None or head.next is None:
        return head
    new_head=reverse_LinkedList(head.next)
    front=head.next
    front.next=head
    head.next=None
    return new_head
def add_two_numbers(head1,head2):
    head1=reverse_LinkedList(head1)
    head2=reverse_LinkedList(head2)
    temp1=head1
    carry=0
    temp2=head2
    while temp1 is not None:
        if temp1.data+temp2.data+carry>9:
            temp1.data=(temp1.data+temp2.data+carry)//10
            carry=(temp1.data+temp2.data+carry)%10
        else:
            temp1.data=temp1.data+temp2.data+carry
            carry=0
        temp1=temp1.next
        temp2=temp2.next
    head=reverse_LinkedList(head1)
    return head
def array_to_ll(a):
    head=Node(a[0])
    mover=head
    for i in range(1,len(a)):
        temp=Node(a[i])
        mover.next=temp
        mover=temp
    return head
def print_ll(head):
    printval=head
    while printval is not None:
        print(printval.data,end=" ") 
        printval=printval.next
    return head
a=[1,1,9]
a1=[3,1,0]
head1=array_to_ll(a)
head2=array_to_ll(a1)
head=add_two_numbers(head1,head2)
print_ll(head)