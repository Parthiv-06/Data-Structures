def next_smaller_el(a):
    res=[0]*len(a)
    stack=[]
    for i in range(len(a)-1,-1,-1):
        while len(stack)!=0 and a[stack[-1]]>=a[i]:
            stack.pop()
        if len(stack)==0:
            res[i]=len(a)
        elif stack[-1]<a[i]:
            res[i]=stack[-1]
        stack.append(i)
    return res
def previous_smaller_or_equal_el(a):
    res=[0]*len(a)
    stack=[]
    for i in range(len(a)):
        while len(stack)!=0 and a[stack[-1]]>a[i]:
            stack.pop()
        if len(stack)==0:
            res[i]=-1
        else:
            res[i]=stack[-1]
        stack.append(i)
    return res
def sum_of_subarray_minimum(a):
    nse=next_smaller_el(a)
    psee=previous_smaller_or_equal_el(a)
    total=0
    for i  in range(len(a)):
        left=i-psee[i]
        right=nse[i]-i
        total+=right*left*a[i]
    return total
a=[3,1,2,4]
print(sum_of_subarray_minimum(a))
